//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace api.intranet {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IReportServicebinding", Namespace="http://tempuri.org/")]
    public partial class IReportServiceservice : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback MergePDFsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPDFStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPDFStreamOrderByOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCombinedPDFStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPDFStreamFromXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTIFFStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryForReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTempFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DebugOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IReportServiceservice() {
            this.Url = "http://intranet/reportservice/rptsvc.dll/soap/IReportService";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event MergePDFsCompletedEventHandler MergePDFsCompleted;
        
        /// <remarks/>
        public event GetPDFStreamCompletedEventHandler GetPDFStreamCompleted;
        
        /// <remarks/>
        public event GetPDFStreamOrderByCompletedEventHandler GetPDFStreamOrderByCompleted;
        
        /// <remarks/>
        public event GetCombinedPDFStreamCompletedEventHandler GetCombinedPDFStreamCompleted;
        
        /// <remarks/>
        public event GetPDFStreamFromXMLCompletedEventHandler GetPDFStreamFromXMLCompleted;
        
        /// <remarks/>
        public event GetTIFFStreamCompletedEventHandler GetTIFFStreamCompleted;
        
        /// <remarks/>
        public event GetQueryForReportCompletedEventHandler GetQueryForReportCompleted;
        
        /// <remarks/>
        public event CreateTempFileCompletedEventHandler CreateTempFileCompleted;
        
        /// <remarks/>
        public event DebugCompletedEventHandler DebugCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:IReportServiceIntf-IReportService#MergePDFs", RequestNamespace="urn:IReportServiceIntf-IReportService", ResponseNamespace="urn:IReportServiceIntf-IReportService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return", DataType="base64Binary")]
        public byte[] MergePDFs([System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] pdf1, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] pdf2) {
            object[] results = this.Invoke("MergePDFs", new object[] {
                        pdf1,
                        pdf2});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void MergePDFsAsync(byte[] pdf1, byte[] pdf2) {
            this.MergePDFsAsync(pdf1, pdf2, null);
        }
        
        /// <remarks/>
        public void MergePDFsAsync(byte[] pdf1, byte[] pdf2, object userState) {
            if ((this.MergePDFsOperationCompleted == null)) {
                this.MergePDFsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMergePDFsOperationCompleted);
            }
            this.InvokeAsync("MergePDFs", new object[] {
                        pdf1,
                        pdf2}, this.MergePDFsOperationCompleted, userState);
        }
        
        private void OnMergePDFsOperationCompleted(object arg) {
            if ((this.MergePDFsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MergePDFsCompleted(this, new MergePDFsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:IReportServiceIntf-IReportService#GetPDFStream", RequestNamespace="urn:IReportServiceIntf-IReportService", ResponseNamespace="urn:IReportServiceIntf-IReportService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return", DataType="base64Binary")]
        public byte[] GetPDFStream(string ReportId, string Parameters) {
            object[] results = this.Invoke("GetPDFStream", new object[] {
                        ReportId,
                        Parameters});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPDFStreamAsync(string ReportId, string Parameters) {
            this.GetPDFStreamAsync(ReportId, Parameters, null);
        }
        
        /// <remarks/>
        public void GetPDFStreamAsync(string ReportId, string Parameters, object userState) {
            if ((this.GetPDFStreamOperationCompleted == null)) {
                this.GetPDFStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPDFStreamOperationCompleted);
            }
            this.InvokeAsync("GetPDFStream", new object[] {
                        ReportId,
                        Parameters}, this.GetPDFStreamOperationCompleted, userState);
        }
        
        private void OnGetPDFStreamOperationCompleted(object arg) {
            if ((this.GetPDFStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPDFStreamCompleted(this, new GetPDFStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:IReportServiceIntf-IReportService#GetPDFStreamOrderBy", RequestNamespace="urn:IReportServiceIntf-IReportService", ResponseNamespace="urn:IReportServiceIntf-IReportService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return", DataType="base64Binary")]
        public byte[] GetPDFStreamOrderBy(string ReportId, string Parameters, string OrderBy) {
            object[] results = this.Invoke("GetPDFStreamOrderBy", new object[] {
                        ReportId,
                        Parameters,
                        OrderBy});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPDFStreamOrderByAsync(string ReportId, string Parameters, string OrderBy) {
            this.GetPDFStreamOrderByAsync(ReportId, Parameters, OrderBy, null);
        }
        
        /// <remarks/>
        public void GetPDFStreamOrderByAsync(string ReportId, string Parameters, string OrderBy, object userState) {
            if ((this.GetPDFStreamOrderByOperationCompleted == null)) {
                this.GetPDFStreamOrderByOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPDFStreamOrderByOperationCompleted);
            }
            this.InvokeAsync("GetPDFStreamOrderBy", new object[] {
                        ReportId,
                        Parameters,
                        OrderBy}, this.GetPDFStreamOrderByOperationCompleted, userState);
        }
        
        private void OnGetPDFStreamOrderByOperationCompleted(object arg) {
            if ((this.GetPDFStreamOrderByCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPDFStreamOrderByCompleted(this, new GetPDFStreamOrderByCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:IReportServiceIntf-IReportService#GetCombinedPDFStream", RequestNamespace="urn:IReportServiceIntf-IReportService", ResponseNamespace="urn:IReportServiceIntf-IReportService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return", DataType="base64Binary")]
        public byte[] GetCombinedPDFStream(string[] ReportId, string[] Parameters, string[] OrderBy) {
            object[] results = this.Invoke("GetCombinedPDFStream", new object[] {
                        ReportId,
                        Parameters,
                        OrderBy});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCombinedPDFStreamAsync(string[] ReportId, string[] Parameters, string[] OrderBy) {
            this.GetCombinedPDFStreamAsync(ReportId, Parameters, OrderBy, null);
        }
        
        /// <remarks/>
        public void GetCombinedPDFStreamAsync(string[] ReportId, string[] Parameters, string[] OrderBy, object userState) {
            if ((this.GetCombinedPDFStreamOperationCompleted == null)) {
                this.GetCombinedPDFStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCombinedPDFStreamOperationCompleted);
            }
            this.InvokeAsync("GetCombinedPDFStream", new object[] {
                        ReportId,
                        Parameters,
                        OrderBy}, this.GetCombinedPDFStreamOperationCompleted, userState);
        }
        
        private void OnGetCombinedPDFStreamOperationCompleted(object arg) {
            if ((this.GetCombinedPDFStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCombinedPDFStreamCompleted(this, new GetCombinedPDFStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:IReportServiceIntf-IReportService#GetPDFStreamFromXML", RequestNamespace="urn:IReportServiceIntf-IReportService", ResponseNamespace="urn:IReportServiceIntf-IReportService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return", DataType="base64Binary")]
        public byte[] GetPDFStreamFromXML(string ReportId, string XMLData) {
            object[] results = this.Invoke("GetPDFStreamFromXML", new object[] {
                        ReportId,
                        XMLData});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPDFStreamFromXMLAsync(string ReportId, string XMLData) {
            this.GetPDFStreamFromXMLAsync(ReportId, XMLData, null);
        }
        
        /// <remarks/>
        public void GetPDFStreamFromXMLAsync(string ReportId, string XMLData, object userState) {
            if ((this.GetPDFStreamFromXMLOperationCompleted == null)) {
                this.GetPDFStreamFromXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPDFStreamFromXMLOperationCompleted);
            }
            this.InvokeAsync("GetPDFStreamFromXML", new object[] {
                        ReportId,
                        XMLData}, this.GetPDFStreamFromXMLOperationCompleted, userState);
        }
        
        private void OnGetPDFStreamFromXMLOperationCompleted(object arg) {
            if ((this.GetPDFStreamFromXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPDFStreamFromXMLCompleted(this, new GetPDFStreamFromXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:IReportServiceIntf-IReportService#GetTIFFStream", RequestNamespace="urn:IReportServiceIntf-IReportService", ResponseNamespace="urn:IReportServiceIntf-IReportService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return", DataType="base64Binary")]
        public byte[] GetTIFFStream(string ReportId, string Parameters) {
            object[] results = this.Invoke("GetTIFFStream", new object[] {
                        ReportId,
                        Parameters});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTIFFStreamAsync(string ReportId, string Parameters) {
            this.GetTIFFStreamAsync(ReportId, Parameters, null);
        }
        
        /// <remarks/>
        public void GetTIFFStreamAsync(string ReportId, string Parameters, object userState) {
            if ((this.GetTIFFStreamOperationCompleted == null)) {
                this.GetTIFFStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTIFFStreamOperationCompleted);
            }
            this.InvokeAsync("GetTIFFStream", new object[] {
                        ReportId,
                        Parameters}, this.GetTIFFStreamOperationCompleted, userState);
        }
        
        private void OnGetTIFFStreamOperationCompleted(object arg) {
            if ((this.GetTIFFStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTIFFStreamCompleted(this, new GetTIFFStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:IReportServiceIntf-IReportService#GetQueryForReport", RequestNamespace="urn:IReportServiceIntf-IReportService", ResponseNamespace="urn:IReportServiceIntf-IReportService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetQueryForReport(string ReportId, string Parameters, string OrderBy) {
            object[] results = this.Invoke("GetQueryForReport", new object[] {
                        ReportId,
                        Parameters,
                        OrderBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryForReportAsync(string ReportId, string Parameters, string OrderBy) {
            this.GetQueryForReportAsync(ReportId, Parameters, OrderBy, null);
        }
        
        /// <remarks/>
        public void GetQueryForReportAsync(string ReportId, string Parameters, string OrderBy, object userState) {
            if ((this.GetQueryForReportOperationCompleted == null)) {
                this.GetQueryForReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryForReportOperationCompleted);
            }
            this.InvokeAsync("GetQueryForReport", new object[] {
                        ReportId,
                        Parameters,
                        OrderBy}, this.GetQueryForReportOperationCompleted, userState);
        }
        
        private void OnGetQueryForReportOperationCompleted(object arg) {
            if ((this.GetQueryForReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryForReportCompleted(this, new GetQueryForReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:IReportServiceIntf-IReportService#CreateTempFile", RequestNamespace="urn:IReportServiceIntf-IReportService", ResponseNamespace="urn:IReportServiceIntf-IReportService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string CreateTempFile() {
            object[] results = this.Invoke("CreateTempFile", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTempFileAsync() {
            this.CreateTempFileAsync(null);
        }
        
        /// <remarks/>
        public void CreateTempFileAsync(object userState) {
            if ((this.CreateTempFileOperationCompleted == null)) {
                this.CreateTempFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTempFileOperationCompleted);
            }
            this.InvokeAsync("CreateTempFile", new object[0], this.CreateTempFileOperationCompleted, userState);
        }
        
        private void OnCreateTempFileOperationCompleted(object arg) {
            if ((this.CreateTempFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTempFileCompleted(this, new CreateTempFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:IReportServiceIntf-IReportService#Debug", RequestNamespace="urn:IReportServiceIntf-IReportService", ResponseNamespace="urn:IReportServiceIntf-IReportService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string Debug(int Steps) {
            object[] results = this.Invoke("Debug", new object[] {
                        Steps});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DebugAsync(int Steps) {
            this.DebugAsync(Steps, null);
        }
        
        /// <remarks/>
        public void DebugAsync(int Steps, object userState) {
            if ((this.DebugOperationCompleted == null)) {
                this.DebugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDebugOperationCompleted);
            }
            this.InvokeAsync("Debug", new object[] {
                        Steps}, this.DebugOperationCompleted, userState);
        }
        
        private void OnDebugOperationCompleted(object arg) {
            if ((this.DebugCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DebugCompleted(this, new DebugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void MergePDFsCompletedEventHandler(object sender, MergePDFsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MergePDFsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MergePDFsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetPDFStreamCompletedEventHandler(object sender, GetPDFStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPDFStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPDFStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetPDFStreamOrderByCompletedEventHandler(object sender, GetPDFStreamOrderByCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPDFStreamOrderByCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPDFStreamOrderByCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCombinedPDFStreamCompletedEventHandler(object sender, GetCombinedPDFStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCombinedPDFStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCombinedPDFStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetPDFStreamFromXMLCompletedEventHandler(object sender, GetPDFStreamFromXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPDFStreamFromXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPDFStreamFromXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTIFFStreamCompletedEventHandler(object sender, GetTIFFStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTIFFStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTIFFStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetQueryForReportCompletedEventHandler(object sender, GetQueryForReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryForReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryForReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreateTempFileCompletedEventHandler(object sender, CreateTempFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTempFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTempFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DebugCompletedEventHandler(object sender, DebugCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DebugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DebugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591